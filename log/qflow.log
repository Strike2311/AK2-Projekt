Starting new log file Mon Jun 15 18:41:04 2020

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running yosys for verilog parsing and synthesis
yosys  -s PPA_adder.ys

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `PPA_adder.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/artur/proj/source/PPA_adder.v' to AST representation.
Generating RTLIL representation for module `\indicate_carry'.
Generating RTLIL representation for module `\t_generator'.
Generating RTLIL representation for module `\GP_module'.
Generating RTLIL representation for module `\add_pos'.
Generating RTLIL representation for module `\PPA_adder'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \add_pos
Used module:     \GP_module
Used module:     \indicate_carry
Used module:     \t_generator

3.1.2. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \add_pos
Used module:     \GP_module
Used module:     \indicate_carry
Used module:     \t_generator
Removed 0 unused modules.
Mapping positional arguments of cell PPA_adder.S5 (add_pos).
Mapping positional arguments of cell PPA_adder.S4 (add_pos).
Mapping positional arguments of cell PPA_adder.S3 (add_pos).
Mapping positional arguments of cell PPA_adder.S2 (add_pos).
Mapping positional arguments of cell PPA_adder.S1 (add_pos).
Mapping positional arguments of cell PPA_adder.S0 (add_pos).
Mapping positional arguments of cell PPA_adder.mod_5_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_5_4 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_4_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_3_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_3_2 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_2_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_1_0 (GP_module).
Mapping positional arguments of cell PPA_adder.Carry_in (indicate_carry).
Mapping positional arguments of cell PPA_adder.gen5 (t_generator).
Mapping positional arguments of cell PPA_adder.gen4 (t_generator).
Mapping positional arguments of cell PPA_adder.gen3 (t_generator).
Mapping positional arguments of cell PPA_adder.gen2 (t_generator).
Mapping positional arguments of cell PPA_adder.gen1 (t_generator).
Mapping positional arguments of cell PPA_adder.gen0 (t_generator).

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \t_generator..
Finding unused cells or wires in module \indicate_carry..

3.5. Executing CHECK pass (checking for obvious problems).
checking module GP_module..
checking module PPA_adder..
checking module add_pos..
checking module indicate_carry..
checking module t_generator..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module GP_module:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module PPA_adder:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module add_pos:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module indicate_carry:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module t_generator:
created 0 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping indicate_carry.$and$/home/artur/proj/source/PPA_adder.v:6$1 ($and) with simplemap.
Mapping indicate_carry.$or$/home/artur/proj/source/PPA_adder.v:7$2 ($or) with simplemap.
Mapping t_generator.$and$/home/artur/proj/source/PPA_adder.v:14$3 ($and) with simplemap.
Mapping t_generator.$or$/home/artur/proj/source/PPA_adder.v:15$4 ($or) with simplemap.
Mapping t_generator.$xor$/home/artur/proj/source/PPA_adder.v:16$5 ($xor) with simplemap.
Mapping GP_module.$and$/home/artur/proj/source/PPA_adder.v:24$6 ($and) with simplemap.
Mapping GP_module.$or$/home/artur/proj/source/PPA_adder.v:25$7 ($or) with simplemap.
Mapping GP_module.$and$/home/artur/proj/source/PPA_adder.v:26$8 ($and) with simplemap.
Mapping add_pos.$xor$/home/artur/proj/source/PPA_adder.v:33$9 ($xor) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\GP_module' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.20.2. Extracting gate netlist of module `\PPA_adder' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.20.3. Extracting gate netlist of module `\add_pos' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 3 wires to a netlist network with 2 inputs and 1 outputs.

3.20.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.3.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

3.20.4. Extracting gate netlist of module `\indicate_carry' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.20.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

3.20.5. Extracting gate netlist of module `\t_generator' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 3 outputs.

3.20.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
removing unused non-port wire \gate_and.
removed 1 unused temporary wires.
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
removing unused non-port wire \gate_and.
removed 1 unused temporary wires.
Finding unused cells or wires in module \t_generator..

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \indicate_carry
Used module:     \add_pos
Used module:     \t_generator
Used module:     \GP_module

3.22.2. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \indicate_carry
Used module:     \add_pos
Used module:     \t_generator
Used module:     \GP_module
Removed 0 unused modules.

3.23. Printing statistics.

=== GP_module ===

Number of wires:                  7
Number of wire bits:              7
Number of public wires:           6
Number of public wire bits:       6
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  3
$_AND_                          2
$_OR_                           1

=== PPA_adder ===

Number of wires:                 38
Number of wire bits:             53
Number of public wires:          38
Number of public wire bits:      53
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                 20
GP_module                       7
add_pos                         6
indicate_carry                  1
t_generator                     6

=== add_pos ===

Number of wires:                  3
Number of wire bits:              3
Number of public wires:           3
Number of public wire bits:       3
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  1
$_XOR_                          1

=== indicate_carry ===

Number of wires:                  5
Number of wire bits:              5
Number of public wires:           4
Number of public wire bits:       4
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  2
$_AND_                          1
$_OR_                           1

=== t_generator ===

Number of wires:                  5
Number of wire bits:              5
Number of public wires:           5
Number of public wire bits:       5
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  3
$_AND_                          1
$_OR_                           1
$_XOR_                          1

=== design hierarchy ===

PPA_adder                         1
GP_module                       7
add_pos                         6
indicate_carry                  1
t_generator                     6

Number of wires:                140
Number of wire bits:            155
Number of public wires:         132
Number of public wire bits:     147
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                 47
$_AND_                         21
$_OR_                          14
$_XOR_                         12

3.24. Executing CHECK pass (checking for obvious problems).
checking module GP_module..
checking module PPA_adder..
checking module add_pos..
checking module indicate_carry..
checking module t_generator..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
final dff cell mappings:
DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\GP_module':
Mapping DFF cells in module `\PPA_adder':
Mapping DFF cells in module `\add_pos':
Mapping DFF cells in module `\indicate_carry':
Mapping DFF cells in module `\t_generator':

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.


LEF Read, Line 135: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 136: NOTE:  Old format VIARULE ignored.
Qflow project setup
LEF Read, Line 140: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 141: NOTE:  Old format VIARULE ignored.

LEF Read, Line 151: NOTE:  Old format VIARULE ignored.
Technology set to osu035 from existing qflow_vars.sh file
LEF Read, Line 152: NOTE:  Old format VIARULE ignored.
Regenerating files for existing project PPA_adder
LEF Read, Line 156: NOTE:  Old format VIARULE ignored.
Qrouter detail maze router version 1.4.59.T
LEF Read, Line 157: NOTE:  Old format VIARULE ignored.
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
LEF Read, Line 167: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site corner (ignored)
LEF Read, Line 168: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site IO (ignored)
LEF Read, Line 172: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site core (ignored)
LEF Read, Line 173: NOTE:  Old format VIARULE ignored.
LEF read: Processed 3179 lines.
LEF Read: encountered 0 errors and 12 warnings total.
Vertical route layer at non-minimum pitch 3.2.  Using smaller pitch 1.6, will route on 1-of-2 tracks for layer metal4.
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/artur/proj/synthesis/PPA_adder.blif  --lef  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef --cel /home/artur/proj/layout/PPA_adder.cel
No PPA_adder.cel1 file found for project. . . no partial blockages to apply to layout.
No PPA_adder.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  PPA_adder
Running getfillcell to determine cell to use for fill.
getfillcell.tcl PPA_adder  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Using cell FILL for fill
Running place2def to translate graywolf output to DEF format.
place2def.tcl PPA_adder FILL
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  -stripe 5.0 150.0 PG PPA_adder  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg
*** Running stage1 routing with defaults
Nets remaining: 80
Nets remaining: 70
Nets remaining: 60
Nets remaining: 50
Nets remaining: 40
Nets remaining: 30
Nets remaining: 20
Nets remaining: 10
Nets remaining: 9
Nets remaining: 8
Nets remaining: 7
Nets remaining: 6
Nets remaining: 5
Nets remaining: 4
Nets remaining: 3
Nets remaining: 2
Progress: Stage 1 total routes completed: 136
No failed routes!
*** Running stage3 routing with defaults, 1st round
Nets remaining: 80
Nets remaining: 70
Nets remaining: 50


--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Converting qrouter output to vesta delay format
Running rc2dly -r PPA_adder.rc -l /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib -d PPA_adder.dly

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running magic 8.2.172
magic -dnull -noconsole  migrate_PPA_adder.tcl

Magic 8.2 revision 172 - Compiled on czw, 11 cze 2020, 18:41:08 CEST.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Scaled tech values by 4 / 1 to match internal grid scaling
Grid scaling is finer than limit set by the process!
Loading "migrate_PPA_adder.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
This action cannot be undone.
LEF read, Line 16 (Message): Unknown keyword "OBS" in LEF file; ignoring.
LEF read, Line 17 (Message): Unknown keyword "PIN" in LEF file; ignoring.
LEF read, Line 207 (Message): Defines site corner (ignored)
LEF read, Line 213 (Message): Defines site IO (ignored)
LEF read, Line 219 (Message): Defines site core (ignored)
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "CLK" from metal1 to m2contact in cell DFFNEGX1.
Moving label "A" from metal1 to m2contact in cell XNOR2X1.
LEF read: Processed 3179 lines.
Reading DEF data from file PPA_adder.def.
This action cannot be undone.
Processed 3 vias total.
Processed 102 subcell instances total.
Processed 22 pins total.
Processed 88 nets total.
DEF read, Line 945 (Warning): Number of nets read (9) does not match the number declared (11).
DEF read: Processed 946 lines.
DEF Read: encountered 1 warning total.
Generating LEF output PPA_adder.lef for cell PPA_adder:
Diagnostic:  Write LEF header for cell PPA_adder
Diagnostic:  Writing LEF output for cell PPA_adder
Diagnostic:  Scale value is 0.050000
Extracting INVX1 into INVX1.ext:
Completed 100%
Extracting NAND2X1 into NAND2X1.ext:
Completed 100%
Extracting BUFX2 into BUFX2.ext:
Completed 100%
Extracting FILL into FILL.ext:
Completed 100%
Extracting AND2X2 into AND2X2.ext:
Completed 100%
Extracting NOR2X1 into NOR2X1.ext:
Completed 100%
Extracting PPA_adder into PPA_adder.ext:
Completed 7%
Completed 13%
Completed 20%
Completed 27%
Completed 33%
Completed 40%
Completed 47%
Completed 53%
Completed 60%
Completed 67%
Completed 73%
Completed 80%
Completed 87%
Completed 93%
Completed 100%

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running magic 8.2.172
magic -dnull -noconsole  /home/artur/proj/layout/run_drc_PPA_adder.tcl

Magic 8.2 revision 172 - Compiled on czw, 11 cze 2020, 18:41:08 CEST.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Scaled tech values by 4 / 1 to match internal grid scaling
Grid scaling is finer than limit set by the process!
Loading "/home/artur/proj/layout/run_drc_PPA_adder.tcl" from command line.
Warning: Calma reading is not undoable!  I hope that's OK.
Library written using GDS-II Release 3.0
Library name: iit_stdcells
Reading "FILL".
Moving label "vdd" from space to metal1 in cell FILL.
Moving label "gnd" from space to metal1 in cell FILL.
Reading "AND2X1".
Moving label "Y" from space to metal1 in cell AND2X1.
Moving label "B" from space to metal1 in cell AND2X1.
Moving label "vdd" from space to metal1 in cell AND2X1.
Moving label "gnd" from space to metal1 in cell AND2X1.
Moving label "A" from space to metal1 in cell AND2X1.
Reading "AND2X2".
Moving label "vdd" from space to metal1 in cell AND2X2.
Moving label "gnd" from space to metal1 in cell AND2X2.
Moving label "A" from space to metal1 in cell AND2X2.
Moving label "B" from space to metal1 in cell AND2X2.
Moving label "Y" from space to metal1 in cell AND2X2.
Reading "AOI21X1".
Moving label "gnd" from space to metal1 in cell AOI21X1.
Moving label "vdd" from space to metal1 in cell AOI21X1.
Moving label "A" from space to metal1 in cell AOI21X1.
Moving label "B" from space to metal1 in cell AOI21X1.
Moving label "Y" from space to metal1 in cell AOI21X1.
Moving label "C" from space to metal1 in cell AOI21X1.
Reading "AOI22X1".
Moving label "gnd" from space to metal1 in cell AOI22X1.
Moving label "vdd" from space to metal1 in cell AOI22X1.
Moving label "C" from space to metal1 in cell AOI22X1.
Moving label "D" from space to metal1 in cell AOI22X1.
Moving label "Y" from space to metal1 in cell AOI22X1.
Moving label "A" from space to metal1 in cell AOI22X1.
Moving label "B" from space to metal1 in cell AOI22X1.
Reading "BUFX2".
Moving label "vdd" from space to metal1 in cell BUFX2.
Moving label "gnd" from space to metal1 in cell BUFX2.
Moving label "A" from space to metal1 in cell BUFX2.
Moving label "Y" from space to metal1 in cell BUFX2.
Reading "BUFX4".
Moving label "vdd" from space to metal1 in cell BUFX4.
Moving label "gnd" from space to metal1 in cell BUFX4.
Moving label "A" from space to metal1 in cell BUFX4.
Moving label "Y" from space to metal1 in cell BUFX4.
Reading "DFFNEGX1".
Moving label "CLK" from space to metal1 in cell DFFNEGX1.
Moving label "vdd" from space to metal1 in cell DFFNEGX1.
Moving label "D" from space to metal1 in cell DFFNEGX1.
Moving label "gnd" from space to metal1 in cell DFFNEGX1.
Moving label "Q" from space to metal1 in cell DFFNEGX1.
Reading "NOR3X1".
Moving label "vdd" from space to metal1 in cell NOR3X1.
Moving label "gnd" from space to metal1 in cell NOR3X1.
Moving label "B" from space to metal1 in cell NOR3X1.
Moving label "C" from space to metal1 in cell NOR3X1.
Moving label "A" from space to metal1 in cell NOR3X1.
Moving label "Y" from space to metal1 in cell NOR3X1.
Reading "DFFPOSX1".
Moving label "vdd" from space to metal1 in cell DFFPOSX1.
Moving label "D" from space to metal1 in cell DFFPOSX1.
Moving label "gnd" from space to metal1 in cell DFFPOSX1.
Moving label "Q" from space to metal1 in cell DFFPOSX1.
Moving label "CLK" from space to metal1 in cell DFFPOSX1.
Reading "FAX1".
Moving label "gnd" from space to metal1 in cell FAX1.
Moving label "vdd" from space to metal1 in cell FAX1.
Moving label "A" from space to metal1 in cell FAX1.
Moving label "B" from space to metal1 in cell FAX1.
Moving label "C" from space to metal1 in cell FAX1.
Moving label "YC" from space to metal1 in cell FAX1.
Moving label "YS" from space to metal1 in cell FAX1.
Reading "HAX1".
Moving label "vdd" from space to metal1 in cell HAX1.
Moving label "gnd" from space to metal1 in cell HAX1.
Moving label "YC" from space to metal1 in cell HAX1.
Moving label "A" from space to metal1 in cell HAX1.
Moving label "B" from space to metal1 in cell HAX1.
Moving label "YS" from space to metal1 in cell HAX1.
Reading "INVX1".
Moving label "A" from space to metal1 in cell INVX1.
Moving label "Y" from space to metal1 in cell INVX1.
Moving label "vdd" from space to metal1 in cell INVX1.
Moving label "gnd" from space to metal1 in cell INVX1.
Reading "INVX2".
Moving label "vdd" from space to metal1 in cell INVX2.
Moving label "gnd" from space to metal1 in cell INVX2.
Moving label "Y" from space to metal1 in cell INVX2.
Moving label "A" from space to metal1 in cell INVX2.
Reading "INVX4".
Moving label "vdd" from space to metal1 in cell INVX4.
Moving label "gnd" from space to metal1 in cell INVX4.
Moving label "Y" from space to metal1 in cell INVX4.
Moving label "A" from space to metal1 in cell INVX4.
Reading "INVX8".
Moving label "vdd" from space to metal1 in cell INVX8.
Moving label "gnd" from space to metal1 in cell INVX8.
Moving label "A" from space to metal1 in cell INVX8.
Moving label "Y" from space to metal1 in cell INVX8.
Reading "NAND2X1".
Moving label "vdd" from space to metal1 in cell NAND2X1.
Moving label "Y" from space to metal1 in cell NAND2X1.
Moving label "gnd" from space to metal1 in cell NAND2X1.
Moving label "A" from space to metal1 in cell NAND2X1.
Moving label "B" from space to metal1 in cell NAND2X1.
Reading "NAND3X1".
Moving label "B" from space to metal1 in cell NAND3X1.
Moving label "vdd" from space to metal1 in cell NAND3X1.
Moving label "gnd" from space to metal1 in cell NAND3X1.
Moving label "A" from space to metal1 in cell NAND3X1.
Moving label "C" from space to metal1 in cell NAND3X1.
Moving label "Y" from space to metal1 in cell NAND3X1.
Reading "NOR2X1".
Moving label "vdd" from space to metal1 in cell NOR2X1.
Moving label "B" from space to metal1 in cell NOR2X1.
Moving label "gnd" from space to metal1 in cell NOR2X1.
Moving label "Y" from space to metal1 in cell NOR2X1.
Moving label "A" from space to metal1 in cell NOR2X1.
Reading "OAI21X1".
Moving label "gnd" from space to metal1 in cell OAI21X1.
Moving label "vdd" from space to metal1 in cell OAI21X1.
Moving label "A" from space to metal1 in cell OAI21X1.
Moving label "B" from space to metal1 in cell OAI21X1.
Moving label "Y" from space to metal1 in cell OAI21X1.
Moving label "C" from space to metal1 in cell OAI21X1.
Reading "OAI22X1".

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running magic 8.2.172
magic -dnull -noconsole  /home/artur/proj/layout/generate_gds_PPA_adder.tcl

Magic 8.2 revision 172 - Compiled on czw, 11 cze 2020, 18:41:08 CEST.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running yosys for verilog parsing and synthesis
yosys  -s PPA_adder.ys

/----------------------------------------------------------------------------\
|                                                                            |
|  yosys -- Yosys Open SYnthesis Suite                                       |
|                                                                            |
|  Copyright (C) 2012 - 2016  Clifford Wolf <clifford@clifford.at>           |
|                                                                            |
|  Permission to use, copy, modify, and/or distribute this software for any  |
|  purpose with or without fee is hereby granted, provided that the above    |
|  copyright notice and this permission notice appear in all copies.         |
|                                                                            |
|  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
|  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
|  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
|  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
|  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
|  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
|  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
|                                                                            |
\----------------------------------------------------------------------------/

Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)


-- Executing script file `PPA_adder.ys' --

1. Executing Liberty frontend.
Imported 39 cell types from liberty file.

2. Executing Verilog-2005 frontend.
Parsing Verilog input from `/home/artur/proj/source/PPA_adder.v' to AST representation.
Generating RTLIL representation for module `\indicate_carry'.
Generating RTLIL representation for module `\t_generator'.
Generating RTLIL representation for module `\GP_module'.
Generating RTLIL representation for module `\add_pos'.
Generating RTLIL representation for module `\PPA_adder'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \add_pos
Used module:     \GP_module
Used module:     \indicate_carry
Used module:     \t_generator

3.1.2. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \add_pos
Used module:     \GP_module
Used module:     \indicate_carry
Used module:     \t_generator
Removed 0 unused modules.
Mapping positional arguments of cell PPA_adder.S5 (add_pos).
Mapping positional arguments of cell PPA_adder.S4 (add_pos).
Mapping positional arguments of cell PPA_adder.S3 (add_pos).
Mapping positional arguments of cell PPA_adder.S2 (add_pos).
Mapping positional arguments of cell PPA_adder.S1 (add_pos).
Mapping positional arguments of cell PPA_adder.S0 (add_pos).
Mapping positional arguments of cell PPA_adder.mod_5_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_5_4 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_4_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_3_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_3_2 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_2_0 (GP_module).
Mapping positional arguments of cell PPA_adder.mod_1_0 (GP_module).
Mapping positional arguments of cell PPA_adder.Carry_in (indicate_carry).
Mapping positional arguments of cell PPA_adder.gen5 (t_generator).
Mapping positional arguments of cell PPA_adder.gen4 (t_generator).
Mapping positional arguments of cell PPA_adder.gen3 (t_generator).
Mapping positional arguments of cell PPA_adder.gen2 (t_generator).
Mapping positional arguments of cell PPA_adder.gen1 (t_generator).
Mapping positional arguments of cell PPA_adder.gen0 (t_generator).

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \t_generator..
Finding unused cells or wires in module \indicate_carry..

3.5. Executing CHECK pass (checking for obvious problems).
checking module GP_module..
checking module PPA_adder..
checking module add_pos..
checking module indicate_carry..
checking module t_generator..
found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.6.8. Executing OPT_EXPR pass (perform const folding).

3.6.9. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).

3.8. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module GP_module:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module PPA_adder:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module add_pos:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module indicate_carry:
created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module t_generator:
created 0 $alu and 0 $macc cells.

3.9. Executing SHARE pass (SAT-based resource sharing).

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.10.8. Executing OPT_EXPR pass (perform const folding).

3.10.9. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.12.5. Finished fast OPT passes.

3.13. Executing MEMORY pass.

3.13.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.13.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.13.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.13.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.17.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.17.8. Executing OPT_EXPR pass (perform const folding).

3.17.9. Finished OPT passes. (There is nothing left to do.)

3.18. Executing TECHMAP pass (map to technology primitives).

3.18.1. Executing Verilog-2005 frontend.
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.
Mapping indicate_carry.$and$/home/artur/proj/source/PPA_adder.v:6$1 ($and) with simplemap.
Mapping indicate_carry.$or$/home/artur/proj/source/PPA_adder.v:7$2 ($or) with simplemap.
Mapping t_generator.$and$/home/artur/proj/source/PPA_adder.v:14$3 ($and) with simplemap.
Mapping t_generator.$or$/home/artur/proj/source/PPA_adder.v:15$4 ($or) with simplemap.
Mapping t_generator.$xor$/home/artur/proj/source/PPA_adder.v:16$5 ($xor) with simplemap.
Mapping GP_module.$and$/home/artur/proj/source/PPA_adder.v:24$6 ($and) with simplemap.
Mapping GP_module.$or$/home/artur/proj/source/PPA_adder.v:25$7 ($or) with simplemap.
Mapping GP_module.$and$/home/artur/proj/source/PPA_adder.v:26$8 ($and) with simplemap.
Mapping add_pos.$xor$/home/artur/proj/source/PPA_adder.v:33$9 ($xor) with simplemap.
No more expansions possible.

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.19.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.19.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

3.19.5. Finished fast OPT passes.

3.20. Executing ABC pass (technology mapping using ABC).

3.20.1. Extracting gate netlist of module `\GP_module' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.20.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

3.20.2. Extracting gate netlist of module `\PPA_adder' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.20.3. Extracting gate netlist of module `\add_pos' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 3 wires to a netlist network with 2 inputs and 1 outputs.

3.20.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.3.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

3.20.4. Extracting gate netlist of module `\indicate_carry' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

3.20.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

3.20.5. Extracting gate netlist of module `\t_generator' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 3 outputs.

3.20.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_library <abc-temp-dir>/stdcells.genlib
ABC: Entered genlib library with 15 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + retime -o
ABC: + map
ABC: Warning: The network was strashed and balanced before mapping.
ABC: + write_blif <abc-temp-dir>/output.blif

3.20.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

3.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
removing unused non-port wire \gate_and.
removed 1 unused temporary wires.
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
removing unused non-port wire \gate_and.
removed 1 unused temporary wires.
Finding unused cells or wires in module \t_generator..

3.21.5. Finished fast OPT passes.

3.22. Executing HIERARCHY pass (managing design hierarchy).

3.22.1. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \indicate_carry
Used module:     \add_pos
Used module:     \t_generator
Used module:     \GP_module

3.22.2. Analyzing design hierarchy..
Top module:  \PPA_adder
Used module:     \indicate_carry
Used module:     \add_pos
Used module:     \t_generator
Used module:     \GP_module
Removed 0 unused modules.

3.23. Printing statistics.

=== GP_module ===

Number of wires:                  7
Number of wire bits:              7
Number of public wires:           6
Number of public wire bits:       6
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  3
$_AND_                          2
$_OR_                           1

=== PPA_adder ===

Number of wires:                 38
Number of wire bits:             53
Number of public wires:          38
Number of public wire bits:      53
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                 20
GP_module                       7
add_pos                         6
indicate_carry                  1
t_generator                     6

=== add_pos ===

Number of wires:                  3
Number of wire bits:              3
Number of public wires:           3
Number of public wire bits:       3
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  1
$_XOR_                          1

=== indicate_carry ===

Number of wires:                  5
Number of wire bits:              5
Number of public wires:           4
Number of public wire bits:       4
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  2
$_AND_                          1
$_OR_                           1

=== t_generator ===

Number of wires:                  5
Number of wire bits:              5
Number of public wires:           5
Number of public wire bits:       5
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                  3
$_AND_                          1
$_OR_                           1
$_XOR_                          1

=== design hierarchy ===

PPA_adder                         1
GP_module                       7
add_pos                         6
indicate_carry                  1
t_generator                     6

Number of wires:                140
Number of wire bits:            155
Number of public wires:         132
Number of public wire bits:     147
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                 47
$_AND_                         21
$_OR_                          14
$_XOR_                         12

3.24. Executing CHECK pass (checking for obvious problems).
checking module GP_module..
checking module PPA_adder..
checking module add_pos..
checking module indicate_carry..
checking module t_generator..
found and reported 0 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
cell DFFNEGX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_N_.
cell DFFPOSX1 (noninv, pins=3, area=384.00) is a direct match for cell type $_DFF_P_.
cell DFFSR (noninv, pins=5, area=704.00) is a direct match for cell type $_DFFSR_PNN_.
create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
final dff cell mappings:
DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\GP_module':
Mapping DFF cells in module `\PPA_adder':
Mapping DFF cells in module `\add_pos':
Mapping DFF cells in module `\indicate_carry':
Mapping DFF cells in module `\t_generator':

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \GP_module..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \add_pos..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \indicate_carry..
Creating internal representation of mux trees.
No muxes found in this module.
Running muxtree optimizer on module \t_generator..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \GP_module.
Optimizing cells in module \PPA_adder.
Optimizing cells in module \add_pos.
Optimizing cells in module \indicate_carry.
Optimizing cells in module \t_generator.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\GP_module'.
Finding identical cells in module `\PPA_adder'.
Finding identical cells in module `\add_pos'.
Finding identical cells in module `\indicate_carry'.
Finding identical cells in module `\t_generator'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \GP_module..
Finding unused cells or wires in module \PPA_adder..
Finding unused cells or wires in module \add_pos..
Finding unused cells or wires in module \indicate_carry..
Finding unused cells or wires in module \t_generator..

5.8. Executing OPT_EXPR pass (perform const folding).

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\GP_module' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

6.1.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + map -M 1
ABC: + write_blif <abc-temp-dir>/output.blif

6.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        2
Removing temp directory.

6.2. Extracting gate netlist of module `\PPA_adder' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.3. Extracting gate netlist of module `\add_pos' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 3 wires to a netlist network with 2 inputs and 1 outputs.

6.3.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + map -M 1
ABC: + write_blif <abc-temp-dir>/output.blif

6.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

6.4. Extracting gate netlist of module `\indicate_carry' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 1 outputs.

6.4.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + map -M 1
ABC: + write_blif <abc-temp-dir>/output.blif

6.4.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

6.5. Extracting gate netlist of module `\t_generator' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 3 outputs.

6.5.1. Executing ABC.
Running ABC command: /usr/local/share/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lib -w /usr/local/share/qflow/tech/osu035/osu035_stdcells.lib
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "PADINOUT".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Scl_LibertyReadGenlib() skipped cell "PADFC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADNC" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADVDD" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "PADGND" without logic function.
ABC: Library "osu035_stdcells" from "/usr/local/share/qflow/tech/osu035/osu035_stdcells.lib" has 28 cells (11 skipped: 4 seq; 3 tri-state; 4 no func).  Time =     0.01 sec
ABC: Memory =    0.38 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig
ABC: + retime
ABC: + strash
ABC: + dch -f
ABC: + map -M 1
ABC: + write_blif <abc-temp-dir>/output.blif

6.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        1
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:            NOR2X1 cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        3
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
Mapping PPA_adder.gen0 using t_generator.
Mapping PPA_adder.gen1 using t_generator.
Mapping PPA_adder.gen2 using t_generator.
Mapping PPA_adder.gen3 using t_generator.
Mapping PPA_adder.gen4 using t_generator.
Mapping PPA_adder.gen5 using t_generator.
Mapping PPA_adder.Carry_in using indicate_carry.
Mapping PPA_adder.mod_1_0 using GP_module.
Mapping PPA_adder.mod_2_0 using GP_module.
Mapping PPA_adder.mod_3_2 using GP_module.
Mapping PPA_adder.mod_3_0 using GP_module.
Mapping PPA_adder.mod_4_0 using GP_module.
Mapping PPA_adder.mod_5_4 using GP_module.
Mapping PPA_adder.mod_5_0 using GP_module.
Mapping PPA_adder.S0 using add_pos.
Mapping PPA_adder.S1 using add_pos.
Mapping PPA_adder.S2 using add_pos.
Mapping PPA_adder.S3 using add_pos.
Mapping PPA_adder.S4 using add_pos.
Mapping PPA_adder.S5 using add_pos.
No more expansions possible.
Deleting now unused module GP_module.
Deleting now unused module add_pos.
Deleting now unused module indicate_carry.
Deleting now unused module t_generator.
Removed 5 unused cells and 196 unused wires.

8. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port PPA_adder.c_in: Missing option -inpad.
Mapping port PPA_adder.c_out using BUFX2.
Mapping port PPA_adder.result using BUFX2.
Don't map input port PPA_adder.sum_comp_1: Missing option -inpad.
Don't map input port PPA_adder.sum_comp_2: Missing option -inpad.

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PPA_adder'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PPA_adder..
Creating internal representation of mux trees.
No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Optimizing cells in module \PPA_adder.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PPA_adder'.
Removed a total of 0 cells.

9.6. Executing OPT_RMDFF pass (remove dff with constant values).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PPA_adder..

9.8. Executing OPT_EXPR pass (perform const folding).

9.9. Finished OPT passes. (There is nothing left to do.)

10. Executing BLIF backend.

11. Printing statistics.

=== PPA_adder ===

Number of wires:                 73
Number of wire bits:             88
Number of public wires:          73
Number of public wire bits:      88
Number of memories:               0
Number of memory bits:            0
Number of processes:              0
Number of cells:                 75
AND2X2                         14
BUFX2                           7
INVX1                          14
NAND2X1                        16
NOR2X1                         24

End of script. Logfile hash: d8fc078d53
CPU: user 0.31s system 0.00s, MEM: 36.63 MB total, 9.54 MB resident
Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os)
Time spent: 19% 15x opt_expr (0 sec), 18% 1x share (0 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef
Cleaning up output syntax
ypostproc.tcl PPA_adder_mapped.blif PPA_adder /usr/local/share/qflow/tech/osu035/osu035.sh vdd gnd
Yosys syntax postprocessing
Cleaning up blif file syntax
Running blifFanout (iterative)

LEF Read, Line 135: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 136: NOTE:  Old format VIARULE ignored.
Qflow project setup
LEF Read, Line 140: NOTE:  Old format VIARULE ignored.
--------------------------------
LEF Read, Line 141: NOTE:  Old format VIARULE ignored.

LEF Read, Line 151: NOTE:  Old format VIARULE ignored.
Technology set to osu035 from existing qflow_vars.sh file
LEF Read, Line 152: NOTE:  Old format VIARULE ignored.
Regenerating files for existing project PPA_adder
LEF Read, Line 156: NOTE:  Old format VIARULE ignored.
Qrouter detail maze router version 1.4.59.T
LEF Read, Line 157: NOTE:  Old format VIARULE ignored.
Reading LEF data from file /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef.
LEF Read, Line 167: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site corner (ignored)
LEF Read, Line 168: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site IO (ignored)
LEF Read, Line 172: NOTE:  Old format VIARULE ignored.
LEF file:  Defines site core (ignored)
LEF Read, Line 173: NOTE:  Old format VIARULE ignored.
LEF read: Processed 3179 lines.
LEF Read: encountered 0 errors and 12 warnings total.
Vertical route layer at non-minimum pitch 3.2.  Using smaller pitch 1.6, will route on 1-of-2 tracks for layer metal4.
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/artur/proj/synthesis/PPA_adder.blif  --lef  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef --cel /home/artur/proj/layout/PPA_adder.cel
No PPA_adder.cel1 file found for project. . . no partial blockages to apply to layout.
No PPA_adder.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  PPA_adder
Running getfillcell to determine cell to use for fill.
getfillcell.tcl PPA_adder  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Using cell FILL for fill
Running place2def to translate graywolf output to DEF format.
place2def.tcl PPA_adder FILL
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  -stripe 5.0 150.0 PG PPA_adder  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg
*** Running stage1 routing with defaults
Nets remaining: 80
Nets remaining: 70
Nets remaining: 60
Nets remaining: 50


--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg
*** Running stage1 routing with defaults
Nets remaining: 80
Nets remaining: 70
Nets remaining: 60
Nets remaining: 50
Nets remaining: 40
Nets remaining: 30
Nets remaining: 20
Nets remaining: 10
Nets remaining: 9


--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running qrouter 1.4.59.T
qrouter -noc  -s PPA_adder.cfg

--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running magic 8.2.172
magic -dnull -noconsole  /home/artur/proj/layout/run_drc_PPA_adder.tcl

Magic 8.2 revision 172 - Compiled on czw, 11 cze 2020, 18:41:08 CEST.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:


--------------------------------
Qflow project setup
--------------------------------

Technology set to osu035 from existing qflow_vars.sh file
Regenerating files for existing project PPA_adder
Running magic 8.2.172
magic -dnull -noconsole  /home/artur/proj/layout/generate_gds_PPA_adder.tcl

Magic 8.2 revision 172 - Compiled on czw, 11 cze 2020, 18:41:08 CEST.
Starting magic under Tcl interpreter
Using the terminal as the console.
Using NULL graphics device.
Processing system .magicrc file
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
4 Magic internal units = 1 Lambda
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 132: section contact:
Contact types polycontact and pm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 133: section contact:
Contact types pdcontact and pdm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 134: section contact:
Contact types psubstratepcontact and psm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 135: section contact:
Contact types ndcontact and ndm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 136: section contact:
Contact types nsubstratencontact and nsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 137: section contact:
Contact types nwsc and nwsm12contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 138: section contact:
Contact types m2contact and m123contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 139: section contact:
Contact types m3contact and m234contact do not stack
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 413: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 414: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 455: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 456: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 478: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 483: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 488: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 500: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "ndm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "nwsm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "pdm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 518: section cifoutput:
Unrecognized layer (type) "psm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 534: section cifoutput:
Unrecognized layer (type) "pm12c/a".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 546: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 554: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 604: section cifoutput:
Unrecognized layer (type) "m123c/m1".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pdm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "ndm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "psm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "pm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "nwsm12c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 608: section cifoutput:
Unrecognized layer (type) "m234c/m2".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 679: section cifoutput:
Unrecognized layer (type) "m123c/m3".
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 687: section cifoutput:
Unrecognized layer (type) "m234c/m4".
Input style lambda=0.20(p): scaleFactor=20, multiplier=1
/usr/share/qflow/tech/osu035/SCN4M_SUBM.20.tech: line 9261: section drc:
OK types "space" in more than one plane.
Assuming same plane (active) as edge.
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Contact size value ignored (using GDS generation rules).
Scaled tech values by 4 / 1 to match internal grid scaling
Grid scaling is finer than limit set by the process!
Loading "/home/artur/proj/layout/generate_gds_PPA_adder.tcl" from command line.
Root cell box:
width x height  (   llx,  lly  ), (   urx,  ury  )

microns:    0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
lambda:     0.00 x 0.00    (  0.00,  0.00 ), (  0.00,  0.00 )
internal:      0 x 0       (     0,  0    ), (     0,  0    )
Warning: Calma reading is not undoable!  I hope that's OK.
Library written using GDS-II Release 3.0
Library name: iit_stdcells
Reading "FILL".

